{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DataLogger\par \pard\plain 
{\tc\tcl2 \v DataLogger}
{\xe \v DataLogger}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACE" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self, video, video_location=None, video_metadata=None, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 intervention_level}}}
=NO_INTVERVENTION_TRACKER, ground_truth_folder=None)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACG" }{}}{\fldrslt {\cs37\ul\cf2 start_recording}}}
 (self)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User input logging starts here #. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACH" }{}}{\fldrslt {\cs37\ul\cf2 end_recording}}}
 (self)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ends recording timer }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 start_timer}}}
 (self, timer_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 get_time_elapsed}}}
 (self, timer_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACK" }{}}{\fldrslt {\cs37\ul\cf2 end_timer}}}
 (self, timer_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 adjustment}}}
 (self, frame_number, from_box, timer_id, tracker_id, intervention_type="USER", to_box=None)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACM" }{}}{\fldrslt {\cs37\ul\cf2 end_adjustment}}}
 (self, to_box, timer_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACN" }{}}{\fldrslt {\cs37\ul\cf2 paused}}}
 (self, frame_number, pause_type, timer_id, tracker_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 end_pause}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 slider_moved}}}
 (self, frame_from, timer_id, tracker_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 end_slider}}}
 (self, frame_to, timer_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACR" }{}}{\fldrslt {\cs37\ul\cf2 record_errors}}}
 (self, frame)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACS" }{}}{\fldrslt {\cs37\ul\cf2 get_tracker_score}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 get_video_characteristics}}}
 (self, video=None)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VIDEO COMPLEXITY STARTS HERE #. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACU" }{}}{\fldrslt {\cs37\ul\cf2 illumination}}}
 (self, frame)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 optical_flow}}}
 (self, frame)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 optical_flow_pan}}}
 (self, flow, dominance_threshold=0.4, magnitude_threshold=0.5)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 optical_flow_zoom}}}
 (self, flow, dominance_threshold=0.7, magnitude_threshold=1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACY" }{}}{\fldrslt {\cs37\ul\cf2 ground_truth_characteristics}}}
 (self, frame_num)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACZ" }{}}{\fldrslt {\cs37\ul\cf2 objects_occluded}}}
 (self, folder_path, fps)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADA" }{}}{\fldrslt {\cs37\ul\cf2 check_intervention_level}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADB" }{}}{\fldrslt {\cs37\ul\cf2 export_charactoristics}}}
 (self, file_path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADC" }{}}{\fldrslt {\cs37\ul\cf2 export_activity}}}
 (self, file_path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADD" }{}}{\fldrslt {\cs37\ul\cf2 plot_chars_df}}}
 (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAADE" }{}}{\fldrslt {\cs37\ul\cf2 occuding_objects}}}
 (self, occluding_tracks_csv, occluding_threshold=0.8)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b intervention_level}{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
String representing constants. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b ground_truth_folder}{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b te}{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b metadata}{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b video}{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b video_id}{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b video_location}{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b start_time_id}{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b previous_frame}{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b logging_dict}{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b timer_dict}{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b paused_data}{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b slider_data}{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b adjust_data}{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b logger_df}{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b video_info_df}{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:DataLogger}
{\xe \v DataLogger\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
__init__ (  {\i self},   {\i video},   {\i video_location} = {\f2 None},   {\i video_metadata} = {\f2 None},   {\i intervention_level} = {\f2 NO_INTVERVENTION_TRACKER},   {\i ground_truth_folder} = {\f2 None})}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26     {\cf17 def }__init__(self, video, video_location=None, video_metadata=None, intervention_level=NO_INTVERVENTION_TRACKER, ground_truth_folder=None):\par
27         \par
28         live_video = {\cf17 False}\par
29         {\cf20 #assume number is live camera}\par
30         {\cf19 if} type(video) == type(0):\par
31             live_video = {\cf17 True}\par
32         \par
33         \par
34         self.intervention_level = intervention_level\par
35         self.ground_truth_folder = ground_truth_folder\par
36         self.te = evaluate.tracker_evaluation()\par
37         {\cf19 if} {\cf19 not} live_video:\par
38             self.te.fps = float(video_metadata[{\cf22 'QuickTime:VideoFrameRate'}])\par
39         {\cf19 else}: \par
40             self.te.fps = 30\par
41 \par
42         {\cf19 if} self.ground_truth_folder {\cf19 is} {\cf18 None} {\cf19 and} {\cf19 not} live_video:\par
43             {\cf20 #Check the same folder and see if it works}\par
44             print({\cf22 "Checking to see if ground truths are in the same folder as video..."})\par
45             self.ground_truth_folder = os.path.dirname(video) + {\cf22 "/"}\par
46             self.te.load_json(self.ground_truth_folder, fps=int(self.te.fps))\par
47             \par
48             {\cf19 if} {\cf19 not} self.te.ground_truth_dict:\par
49                 print({\cf22 "Checking Adjacent folder with the same name..."})\par
50                 self.ground_truth_folder = os.path.dirname(video) + {\cf22 "/"} + os.path.basename(video)[:-4] + {\cf22 "/"}\par
51                 self.te.load_json(self.ground_truth_folder, fps=int(self.te.fps))\par
52         \par
53         {\cf19 if} {\cf19 not} self.te.ground_truth_dict:\par
54             print({\cf22 "Could not find ground truths"})\par
55 \par
56         self.metadata = video_metadata\par
57         self.video = video\par
58         \par
59         {\cf19 if} {\cf19 not} live_video:\par
60             self.video_id = os.path.basename(video)[:-4]\par
61         {\cf19 else}:\par
62             self.video_id = -1\par
63 \par
64         self.video_location = video_location\par
65 \par
66         self.start_time_id = {\cf22 "START_STOP"}\par
67 \par
68         self.previous_frame = {\cf18 None}\par
69         self.logging_dict = \{\}\par
70         self.timer_dict = \{\}\par
71 \par
72         self.paused_data = \{\}\par
73         self.slider_data = \{\}\par
74         self.adjust_data = \{\}\par
75 \par
76 \par
77         self.logger_df = pd.DataFrame(columns =[{\cf22 'Frame_Number'},\par
78                                                 {\cf22 'Event_Time'},\par
79                                                 {\cf22 'Event_Duration'},\par
80                                                 {\cf22 'Event_Type'},\par
81                                                 {\cf22 'Event_Value'},\par
82                                                 {\cf22 'Intervention_Level'},\par
83                                                 {\cf22 'Intervention_Type'},\par
84                                                 {\cf22 'Tracker_ID'}]) {\cf20 # NOTE: Tracker ID is one of either: Selected (And active Tracker), or tracker acted upon by additional methods.}\par
85                                                                {\cf20 # This means that all USER Intervention_Types, the tracker_ID is the current tracker}\par
86                                                                {\cf20 # When Kalman, Regressuion or MRCNN make changes, it does not need to be the current tracker selected. }\par
87 \par
88         self.video_info_df = pd.DataFrame(columns=[ {\cf22 'Frame_Number'}, \par
89                                                     {\cf22 'Mean_Illumination'}, \par
90                                                     {\cf22 'Std_Illumination'}, \par
91 \par
92                                                     {\cf22 'Mean_Opticalflow'}, \par
93                                                     {\cf22 'Median_Opticalflow'},\par
94                                                     {\cf22 'Mean_Magnitude_Opticalflow'},\par
95                                                     {\cf22 'Std_Opticalflow'},\par
96 \par
97                                                     {\cf22 'Zoom_Opticalflow'},\par
98                                                     {\cf22 'Zoom_Dominance_Percent'},\par
99                                                     {\cf22 'Zoom_Dominance_Threshold'},\par
100                                                     {\cf22 'Zoom_Mean_Magnitude_Threshold'},\par
101 \par
102                                                     {\cf22 'Pan_Opticalflow'},\par
103                                                     {\cf22 'Pan_Dominance_Percent'},\par
104                                                     {\cf22 'Pan_Dominance_Threshold'},\par
105                                                     {\cf22 'Pan_Mean_Magnitude_Threshold'},\par
106                                                     \par
107                                                     {\cf22 'Ground_Truth_Count'},\par
108                                                     {\cf22 'Occluded_Ground_Truths_Count'},\par
109                                                     {\cf22 'Entering_Ground_Truths'},\par
110                                                     {\cf22 'Entering_Ground_Truths_Count'},\par
111                                                     {\cf22 'Exiting_Ground_Truths'},\par
112                                                     {\cf22 'Exiting_Ground_Truths_Count'},\par
113                                                     {\cf22 'Ground_Truth_Labels'},\par
114                                                     {\cf22 'Ground_Truth_Areas'},\par
115                                                     {\cf22 'Ground_Truth_Heights'},\par
116                                                     {\cf22 'Ground_Truth_Widths'},\par
117 \par
118                                                     {\cf22 'Video_ID'}, \par
119                                                     {\cf22 'Video_Location'}])\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v adjustment\:DataLogger}
{\xe \v DataLogger\:adjustment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
adjustment (  {\i self},   {\i frame_number},   {\i from_box},   {\i timer_id},   {\i tracker_id},   {\i intervention_type} = {\f2 "USER"},   {\i to_box} = {\f2 None})}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Records the frame number and locations where the tracker is moved from and to.\par
\par
Records what made the adjustment.\par
    \par
    Human - If the user made the adjustment\par
    \par
    Model - If the MaskRCNN model made the automatic adjustment\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 169     {\cf17 def }adjustment(self, frame_number, from_box, timer_id, tracker_id, intervention_type="USER", to_box=None):\par
170         {\cf22 """}\par
171 {\cf22         Records the frame number and locations where the tracker is moved from and to.}\par
172 {\cf22 }\par
173 {\cf22         Records what made the adjustment.}\par
174 {\cf22             }\par
175 {\cf22             Human - If the user made the adjustment}\par
176 {\cf22             }\par
177 {\cf22             Model - If the MaskRCNN model made the automatic adjustment}\par
178 {\cf22         """}\par
179 \par
180         time_started = self.start_timer(timer_id)\par
181         data = [frame_number,\par
182         time_started,\par
183         0,\par
184         {\cf22 "Assignment"},\par
185         str(from_box),\par
186         self.intervention_level,\par
187         intervention_type,\par
188         tracker_id\par
189         ]\par
190         self.adjust_data[timer_id] = data\par
191 \par
192         {\cf19 if} to_box:\par
193             self.end_adjustment(to_box, timer_id)\par
194 \par
195         \par
196         {\cf20 # print(self.logger_df)}\par
197     \par
}
{
\ql
References DataLogger.adjust_data, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACM" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.end_adjustment()}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.intervention_level}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.start_timer()}}}
.}\par
}
{\xe \v check_intervention_level\:DataLogger}
{\xe \v DataLogger\:check_intervention_level}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
check_intervention_level (  {\i self})}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 585     {\cf17 def }check_intervention_level(self):\par
586         intervention = pd.unique(self.logger_df[{\cf22 'Intervention_Type'}])\par
587         {\cf19 if} {\cf22 "USER"} {\cf19 in} intervention:\par
588             self.intervention_level = HUMAN_INTERVENTION\par
589 \par
590             {\cf19 if} {\cf22 "KALMAN"} {\cf19 in} intervention {\cf19 or} {\cf22 "REGRESSION"} {\cf19 in} intervention:\par
591                 self.intervention_level = HUMAN_INTERVENTION_REGRESSION_KALMAN\par
592             \par
593                 {\cf19 if} {\cf22 "MRCNN"} {\cf19 in} intervention:\par
594                     self.intervention_level = HUMAN_INTERVENTION_MRCNN_KALMAN_REGRESSION\par
595 \par
596 \par
597             {\cf19 if} {\cf22 "MRCNN"} {\cf19 in} intervention:\par
598                 self.intervention_level = HUMAN_INTERVENTION_MCRNN\par
599 \par
600                 {\cf19 if} {\cf22 "KALMAN"} {\cf19 in} intervention {\cf19 or} {\cf22 "REGRESSION"}:\par
601                     self.intervention_level = HUMAN_INTERVENTION_MRCNN_KALMAN_REGRESSION\par
602         \par
603         {\cf20 # If there is no human intervention}\par
604         {\cf19 elif} {\cf22 "MRCNN"} {\cf19 in} intervention:\par
605             self.intervention_level = NO_INTERVENTION_MODEL\par
606         \par
607         {\cf19 else}:\par
608             self.intervention_level = NO_INTVERVENTION_TRACKER\par
609 \par
610         {\cf19 return} self.intervention_level\par
611 \par
}
\par
{
\ql
Referenced by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACZ" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.objects_occluded()}}}
.}\par
}
{\xe \v end_adjustment\:DataLogger}
{\xe \v DataLogger\:end_adjustment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
end_adjustment (  {\i self},   {\i to_box},   {\i timer_id})}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Records the adjustment when final changes are made. This contributes final location and duration.\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 198     {\cf17 def }end_adjustment(self, to_box, timer_id):\par
199         {\cf22 '''}\par
200 {\cf22         Records the adjustment when final changes are made. This contributes final location and duration.}\par
201 {\cf22         '''}\par
202         duration = self.get_time_elapsed(timer_id)\par
203         data = self.adjust_data[timer_id]\par
204         data[2] = duration\par
205 \par
206         data[4] = str(data[4]) + str(to_box)\par
207         self.logger_df.loc[self.logger_df.shape[0]] = data\par
208 \par
209 \par
}
{
\ql
References DataLogger.adjust_data, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.get_time_elapsed()}}}
, and DataLogger.logger_df.}\par
{
\ql
Referenced by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.adjustment()}}}
.}\par
}
{\xe \v end_pause\:DataLogger}
{\xe \v DataLogger\:end_pause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
end_pause (  {\i self})}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid After paused() is called, end_pause is used to end the paused action and add the duration to the logger.\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 232     {\cf17 def }end_pause(self):\par
233         {\cf22 '''}\par
234 {\cf22         After paused() is called, end_pause is used to end the paused action and add the duration to the logger.}\par
235 {\cf22         '''}\par
236         {\cf19 if} self.paused_data:\par
237             {\cf19 for} pause_ids {\cf19 in} self.paused_data.keys():\par
238                 {\cf19 if} pause_ids {\cf19 is} {\cf19 not} self.start_time_id:\par
239                     {\cf20 # print(pause_ids)}\par
240                     self.end_timer(pause_ids)\par
241                     duration = self.get_time_elapsed(pause_ids)\par
242                     data = self.paused_data[pause_ids]\par
243                     data[2] = duration\par
244                     self.logger_df.loc[self.logger_df.shape[0]] = data\par
245                 \par
246                 {\cf20 # print(self.logger_df)}\par
247             self.paused_data = \{\}\par
248 \par
}
{
\ql
References {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACK" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.end_timer()}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.get_time_elapsed()}}}
, DataLogger.logger_df, DataLogger.paused_data, and DataLogger.start_time_id.}\par
}
{\xe \v end_recording\:DataLogger}
{\xe \v DataLogger\:end_recording}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
end_recording (  {\i self})}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ends recording timer }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Ends recording by setting the second value in the tuple (start, end) to the current time.\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 135     {\cf17 def }end_recording(self):\par
136         {\cf22 '''}\par
137 {\cf22         Ends recording by setting the second value in the tuple (start, end) to the current time.}\par
138 {\cf22         '''}\par
139         self.timer_dict[self.start_time_id][1] = time.time()\par
140 \par
}
{
\ql
References DataLogger.start_time_id, and DataLogger.timer_dict.}\par
}
{\xe \v end_slider\:DataLogger}
{\xe \v DataLogger\:end_slider}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
end_slider (  {\i self},   {\i frame_to},   {\i timer_id})}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid When slider_moved() is called, we call end_slider which removes a duration timer and adds the duration and SLIDER action to the logger.\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 269     {\cf17 def }end_slider(self, frame_to, timer_id):\par
270         {\cf22 '''}\par
271 {\cf22         When slider_moved() is called, we call end_slider which removes a duration timer and adds the duration and SLIDER action to the logger.}\par
272 {\cf22         '''}\par
273         {\cf19 if} self.slider_data:\par
274             {\cf20 # time_started, timer_ended = self.timer_dict[timer_id]}\par
275             duration = self.get_time_elapsed(timer_id)\par
276             data = self.slider_data[timer_id]\par
277             data[2] = duration\par
278             data[4] = frame_to\par
279             self.logger_df.loc[self.logger_df.shape[0]] = data\par
280             self.slider_data = \{\}\par
281             \par
282             self.end_timer(timer_id)\par
283             del self.timer_dict[timer_id]\par
284 \par
285             {\cf20 # print(self.logger_df)}\par
286     \par
}
{
\ql
References {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACK" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.end_timer()}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.get_time_elapsed()}}}
, DataLogger.logger_df, DataLogger.slider_data, and DataLogger.timer_dict.}\par
}
{\xe \v end_timer\:DataLogger}
{\xe \v DataLogger\:end_timer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
end_timer (  {\i self},   {\i timer_id})}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Ends the timer from when the project is finished\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 162     {\cf17 def }end_timer(self, timer_id):\par
163         {\cf22 """}\par
164 {\cf22         Ends the timer from when the project is finished}\par
165 {\cf22         """}\par
166         duration = self.get_time_elapsed(timer_id)\par
167         self.timer_dict[timer_id] = (self.timer_dict[timer_id][0], duration)\par
168 \par
}
{
\ql
References {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACJ" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.get_time_elapsed()}}}
, and DataLogger.timer_dict.}\par
{
\ql
Referenced by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.end_pause()}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.end_slider()}}}
.}\par
}
{\xe \v export_activity\:DataLogger}
{\xe \v DataLogger\:export_activity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
export_activity (  {\i self},   {\i file_path})}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 621     {\cf17 def }export_activity(self, file_path):\par
622         {\cf19 if} self.logger_df.shape[0] > 0:\par
623             logger_filename =   file_path + {\cf22 "_ACTIVITY_LOGGER_"} + self.intervention_level + {\cf22 ".csv"}\par
624 \par
625             intervention_level = self.check_intervention_level()\par
626             print(intervention_level)\par
627 \par
628             self.logger_df = self.logger_df.assign(Intervention_Level=intervention_level)\par
629 \par
630             self.logger_df.to_csv(logger_filename, index={\cf17 False})\par
631             print({\cf22 "Exported"})\par
632         {\cf19 else}:\par
633             print({\cf22 "No Data Available"})\par
634 \par
}
}
{\xe \v export_charactoristics\:DataLogger}
{\xe \v DataLogger\:export_charactoristics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
export_charactoristics (  {\i self},   {\i file_path})}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 612     {\cf17 def }export_charactoristics(self, file_path):\par
613         print({\cf22 "Saving Characteristics"})\par
614 \par
615         char_filename =  file_path + {\cf22 "CHARACTERISTICS "} + {\cf22 ".csv"}\par
616         self.video_info_df.to_csv(char_filename, index={\cf17 False})\par
617         \par
618             \par
619         print({\cf22 "Saving complete"})\par
620 \par
}
}
{\xe \v get_time_elapsed\:DataLogger}
{\xe \v DataLogger\:get_time_elapsed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
get_time_elapsed (  {\i self},   {\i timer_id})}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid returns elapsed time of a timer in seconds\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 155     {\cf17 def }get_time_elapsed(self, timer_id):\par
156         {\cf22 """}\par
157 {\cf22         returns elapsed time of a timer in seconds}\par
158 {\cf22         """}\par
159         {\cf19 return} time.time() - self.timer_dict[self.start_time_id][0] - self.timer_dict[timer_id][0]\par
160 \par
161 \par
}
{
\ql
References DataLogger.start_time_id, and DataLogger.timer_dict.}\par
{
\ql
Referenced by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACM" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.end_adjustment()}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACO" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.end_pause()}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACQ" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.end_slider()}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACK" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.end_timer()}}}
.}\par
}
{\xe \v get_tracker_score\:DataLogger}
{\xe \v DataLogger\:get_tracker_score}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
get_tracker_score (  {\i self})}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Not implemented\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 293     {\cf17 def }get_tracker_score(self):\par
294         {\cf22 '''}\par
295 {\cf22         Not implemented}\par
296 {\cf22         '''}\par
297         {\cf19 pass}\par
298     \par
}
}
{\xe \v get_video_characteristics\:DataLogger}
{\xe \v DataLogger\:get_video_characteristics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
get_video_characteristics (  {\i self},   {\i video} = {\f2 None})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VIDEO COMPLEXITY STARTS HERE #. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Records all video characteristics. \par
    This will be done independently from the user input \par
    and will be constants between intervention types\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 303     {\cf17 def }get_video_characteristics(self, video=None):\par
304         {\cf22 """}\par
305 {\cf22         Records all video characteristics. }\par
306 {\cf22             This will be done independently from the user input }\par
307 {\cf22             and will be constants between intervention types}\par
308 {\cf22         """}\par
309 \par
310         {\cf19 if} video {\cf19 is} {\cf18 None}:\par
311             video = self.video\par
312         cap = cv2.VideoCapture(video)\par
313         fps = cap.get(cv2.CAP_PROP_FPS)\par
314         te_loaded = {\cf17 True}\par
315 \par
316         folder = os.path.dirname(video)\par
317         print({\cf22 "Done"})\par
318 \par
319         {\cf19 if} (cap.isOpened()== {\cf17 False}): \par
320             print({\cf22 "Error opening video  file"})\par
321         \par
322         previous_gt_frame = 0\par
323         gt_count = {\cf18 None}\par
324         occluded_count = {\cf18 None}\par
325         total_frames = cap.get(cv2.CAP_PROP_FRAME_COUNT)\par
326         {\cf20 # Read until video is completed}\par
327         while({\cf17 True}):\par
328             {\cf20 # Capture frame-by-frame}\par
329             ret, frame = cap.read()\par
330             frame_num = cap.get(cv2.CAP_PROP_POS_FRAMES)\par
331             \par
332             {\cf19 while} {\cf19 not} ret:\par
333                 print(ret, frame_num)\par
334                 frame_num += 1\par
335                 cap.set(cv2.CAP_PROP_POS_FRAMES, frame_num)\par
336                 ret, frame = cap.read()\par
337                 {\cf19 if} frame_num >= total_frames:\par
338                     {\cf19 break}\par
339             \par
340             {\cf19 if} ret == {\cf17 True}:\par
341                 ill_mean, ill_std = self.illumination(frame)\par
342                 of_dict = self.optical_flow(frame) {\cf20 # Mean Median STD Mean_Magnitude Dominant_Zoom Percent_Zoom }\par
343                                                              {\cf20 # Zoom_Dominance_Thresh Zoom_Magnitude_Thresh Dominant_Pan Percent_Pan }\par
344                                                              {\cf20 # Pan_Dominance_Thresh Pan_Magnitude_Thresh}\par
345                 print(of_dict)\par
346                 {\cf19 if} te_loaded:\par
347                     gt_count = self.te.get_ground_truth_count(int(frame_num))\par
348                     occluded_count = self.te.get_occlusion_count(int(frame_num))\par
349 \par
350                     \par
351 \par
352                 new_trackers = {\cf18 None}\par
353                 nt_count = {\cf18 None}\par
354                 leaving_trackers = {\cf18 None}\par
355                 leaving_count = {\cf18 None}\par
356 \par
357                 labels = {\cf18 None}\par
358                 areas = {\cf18 None}\par
359                 heights = {\cf18 None}\par
360                 widths = {\cf18 None}\par
361 \par
362                 {\cf19 if} self.te.ground_truth_exists(frame_num) {\cf19 and} te_loaded:\par
363                     {\cf19 if} self.te.ground_truth_exists(frame_num):\par
364                         new_trackers, leaving_trackers = self.te.get_ground_truth_difference(previous_gt_frame, frame_num)\par
365                         nt_count = len(new_trackers)\par
366                         leaving_count = len(leaving_trackers)\par
367                         labels, areas, heights, widths = self.ground_truth_characteristics(frame_num)\par
368                         \par
369 \par
370                     previous_gt_frame = frame_num\par
371                     \par
372                 {\cf20 # print(ill_mean, ill_std, flow_mean, flow_median, flow_std, gt_count, occluded_count)}\par
373                 data = [frame_num, ill_mean, ill_std, of_dict[{\cf22 "Mean"}], of_dict[{\cf22 "Median"}], \par
374                         of_dict[{\cf22 "STD"}], of_dict[{\cf22 "Mean_Magnitude"}], of_dict[{\cf22 "Dominant_Zoom"}], \par
375                         of_dict[{\cf22 "Percent_Zoom"}], of_dict[{\cf22 "Zoom_Dominance_Thresh"}], of_dict[{\cf22 "Zoom_Magnitude_Thresh"}],\par
376                         of_dict[{\cf22 "Dominant_Pan"}], of_dict[{\cf22 "Percent_Pan"}], of_dict[{\cf22 "Pan_Dominance_Thresh"}], of_dict[{\cf22 "Pan_Magnitude_Thresh"}],\par
377                         gt_count, occluded_count, new_trackers, nt_count, leaving_trackers, leaving_count, labels, areas, heights, widths,  \par
378                         self.video_id, self.video_location\par
379                 ]\par
380 \par
381                 self.video_info_df.loc[self.video_info_df.shape[0]] = data\par
382                 {\cf20 # # Display the resulting frame}\par
383                 cv2.imshow({\cf22 'Frame'}, frame)\par
384                 cv2.waitKey(1)\par
385             {\cf19 else}:\par
386                 {\cf19 return} self.video_info_df\par
387         {\cf19 return} self.video_info_df\par
388 \par
}
{
\ql
References {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACY" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.ground_truth_characteristics()}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACU" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.illumination()}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.optical_flow()}}}
, DataLogger.te, DataLogger.video, DataLogger.video_id, DataLogger.video_info_df, and DataLogger.video_location.}\par
}
{\xe \v ground_truth_characteristics\:DataLogger}
{\xe \v DataLogger\:ground_truth_characteristics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ground_truth_characteristics (  {\i self},   {\i frame_num})}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Records ground truth height, width, and distance from last frame\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 554     {\cf17 def }ground_truth_characteristics(self, frame_num):\par
555         {\cf22 '''}\par
556 {\cf22         Records ground truth height, width, and distance from last frame}\par
557 {\cf22         '''}\par
558         ground_truths = self.te.get_ground_truths(frame_num)\par
559         labels = []\par
560         gt_areas = []\par
561         gt_heights = []\par
562         gt_widths = []\par
563         {\cf19 for} gt {\cf19 in} ground_truths:\par
564             box = gt[{\cf22 'points'}]\par
565             labels.append(gt[{\cf22 'label'}])\par
566             gt_areas.append(self.te.get_area(box))\par
567             gt_heights.append(self.te.get_height(box))\par
568             gt_widths.append(self.te.get_width(box))\par
569 \par
570         {\cf19 return} labels, gt_areas, gt_heights, gt_widths\par
571 \par
}
{
\ql
References DataLogger.te.}\par
{
\ql
Referenced by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.get_video_characteristics()}}}
.}\par
}
{\xe \v illumination\:DataLogger}
{\xe \v DataLogger\:illumination}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
illumination (  {\i self},   {\i frame})}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Records the average intensity of the RGB image in greyscale with values between 0 (black) and 255 (white)\par
\par
Intensity = (R + G + B)/3\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 389     {\cf17 def }illumination(self, frame):\par
390         {\cf22 """}\par
391 {\cf22         Records the average intensity of the RGB image in greyscale with values between 0 (black) and 255 (white)}\par
392 {\cf22         }\par
393 {\cf22         Intensity = (R + G + B)/3}\par
394 {\cf22         """}\par
395         gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\par
396         mean, std = cv2.meanStdDev(gray)\par
397         {\cf19 return} mean[0][0], std[0][0]\par
398 \par
}
{
\ql
Referenced by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.get_video_characteristics()}}}
.}\par
}
{\xe \v objects_occluded\:DataLogger}
{\xe \v DataLogger\:objects_occluded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
objects_occluded (  {\i self},   {\i folder_path},   {\i fps})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Records weather the occlusion flag has occured on that frame. Records how many IDs have been occluded.\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 572     {\cf17 def }objects_occluded(self, folder_path, fps):\par
573         {\cf22 """}\par
574 {\cf22         Records weather the occlusion flag has occured on that frame. Records how many IDs have been occluded.}\par
575 {\cf22         """}\par
576         occlusion_dict = \{\}\par
577         {\cf19 for} frame {\cf19 in} self.te.get_frame_count():\par
578             occlusion_dict[frame] = self.te.count_occlusion(frame)\par
579             print(occlusion_dict[frame])\par
580 \par
581         {\cf19 return} occlusion_dict\par
582 \par
583 \par
584     \par
}
{
\ql
References DataLogger.check_intervention_level(), {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.intervention_level}}}
, DataLogger.logger_df, DataLogger.te, and DataLogger.video_info_df.}\par
}
{\xe \v occuding_objects\:DataLogger}
{\xe \v DataLogger\:occuding_objects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
occuding_objects (  {\i self},   {\i occluding_tracks_csv},   {\i occluding_threshold} = {\f2 0.8})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Given recorded occluding objects, check the precision of ground truth onto occluding object.\par
If precision of ground truth is above threshold, this means that object is occluded.\par
This is the same measure as check_occlusion but data in this context is different and \par
therefore a different function\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 638     {\cf17 def }occuding_objects(self, occluding_tracks_csv, occluding_threshold=0.8):\par
639         {\cf22 '''}\par
640 {\cf22         Given recorded occluding objects, check the precision of ground truth onto occluding object.}\par
641 {\cf22         If precision of ground truth is above threshold, this means that object is occluded.}\par
642 {\cf22         This is the same measure as check_occlusion but data in this context is different and }\par
643 {\cf22         therefore a different function}\par
644 {\cf22         '''}\par
645         percent_occluded = \{\}\par
646         \par
647         {\cf20 # Load occluding tracks}\par
648         occlusion_dict = self.te.load_tracker_data(occluding_tracks_csv)\par
649 \par
650         occluding_frame = []\par
651         occluding_name = []\par
652         occluded_list = []\par
653         percent_occluded_list = []\par
654 \par
655         {\cf20 #convert occlusions to gt form}\par
656         {\cf19 for} frame {\cf19 in} occlusion_dict.keys():\par
657             occlusion_trackers = self.te.get_estimates(frame)\par
658 \par
659             {\cf19 for} occlusion_object {\cf19 in} occlusion_trackers:\par
660                 {\cf20 # Correct for comparing tracker to ground_truths based on loaded information}\par
661                 corrected_occlusion = self.estimate_to_point(occlusion_object, invert_y=self.te.invert_y)\par
662 \par
663                 {\cf20 # Get precision of occluding object onto ground truths.}\par
664                 {\cf20 # This method looks all ground truths, and checks intersection with occlusion.}\par
665                 {\cf20 # Precision measures how much of the E covers the GT}\par
666                 occluded, percent_occluded = self.te.check_occlusion(corrected_occlusion, frame)\par
667 \par
668                 occluding_frame.append(frame)\par
669                 occluding_name.append(occlusion_object[{\cf22 'name'}])\par
670                 occluded_list.append(occluded)\par
671                 percent_occluded_list.append(percent_occluded)\par
672 \par
673 \par
674 \par
675         {\cf20 # # Return Dictionary of objects and their percent occlusion}\par
676         {\cf20 # data = \{}\par
677         {\cf20 #         "Frame_Num": occluding_frame,}\par
678         {\cf20 #         "Occluding_Name": occluding_name,}\par
679         {\cf20 #         "Ground_Truth": }\par
680         {\cf20 #         "Occluding": occluded_list,}\par
681         {\cf20 #         "Percent_Occluding": percent_occluded_list,}\par
682         {\cf20 #         ""}\par
683 \par
684 \par
685         {\cf20 #         \}}\par
686         {\cf20 # pass}\par
687 \par
}
}
{\xe \v optical_flow\:DataLogger}
{\xe \v DataLogger\:optical_flow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
optical_flow (  {\i self},   {\i frame})}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Uses optical flow to measure the average magnitude of movement from the flow of pixels.\par
\par
Also records the resolution of the image\par
\par
Returns values in a dictionary with names:\par
    Mean\par
    Median\par
    STD\par
    Mean_Magnitude\par
    Dominant_Zoom\par
    Percent_Zoom\par
    Zoom_Dominance_Thresh\par
    Zoom_Magnitude_Thresh\par
    Dominant_Pan\par
    Percent_Pan\par
    Pan_Dominance_Thresh\par
    Pan_Magnitude_Thresh\par
\par
[66] Gunnar Farnebäck. Two-frame motion estimation based on polynomial expansion. In Image Analysis, pages 363–370. Springer, 2003. \par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 399     {\cf17 def }optical_flow(self, frame):\par
400         {\cf22 """}\par
401 {\cf22         Uses optical flow to measure the average magnitude of movement from the flow of pixels.}\par
402 {\cf22 }\par
403 {\cf22         Also records the resolution of the image}\par
404 {\cf22 }\par
405 {\cf22         Returns values in a dictionary with names:}\par
406 {\cf22             Mean}\par
407 {\cf22             Median}\par
408 {\cf22             STD}\par
409 {\cf22             Mean_Magnitude}\par
410 {\cf22             Dominant_Zoom}\par
411 {\cf22             Percent_Zoom}\par
412 {\cf22             Zoom_Dominance_Thresh}\par
413 {\cf22             Zoom_Magnitude_Thresh}\par
414 {\cf22             Dominant_Pan}\par
415 {\cf22             Percent_Pan}\par
416 {\cf22             Pan_Dominance_Thresh}\par
417 {\cf22             Pan_Magnitude_Thresh}\par
418 {\cf22 }\par
419 {\cf22         [66] Gunnar Farnebäck. Two-frame motion estimation based on polynomial expansion. In Image Analysis, pages 363–370. Springer, 2003. }\par
420 {\cf22         """}\par
421         {\cf19 if} self.previous_frame {\cf19 is} {\cf18 None}:\par
422             self.previous_frame = frame\par
423             \par
424             {\cf19 return} \{{\cf22 "Mean"}:0, {\cf22 "Median"}: 0, {\cf22 "STD"}:0, {\cf22 "Mean_Magnitude"}:0, {\cf22 "Dominant_Zoom"}:0, {\cf22 "Percent_Zoom"}:0, {\cf22 "Zoom_Dominance_Thresh"}:0, {\cf22 "Zoom_Magnitude_Thresh"}: 0,{\cf22 "Dominant_Pan"}: 0, {\cf22 "Percent_Pan"}: 0, {\cf22 "Pan_Dominance_Thresh"}: 0, {\cf22 "Pan_Magnitude_Thresh"}:0\}\par
425 \par
426         gray_prev = cv2.cvtColor(self.previous_frame, cv2.COLOR_BGR2GRAY)\par
427         gray_current = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\par
428         \par
429         {\cf20 #Resize to 1/4 to reduce complexity}\par
430         gray_prev = cv2.resize(gray_prev, (0,0), fx=0.25, fy=0.25) \par
431         gray_current = cv2.resize(gray_current, (0,0), fx=0.25, fy=0.25)\par
432 \par
433         flow = cv2.calcOpticalFlowFarneback(gray_prev, gray_current, flow={\cf18 None}, pyr_scale=0.5, levels=6, winsize=50, iterations=3, poly_n=5, poly_sigma=1.2, flags={\cf18 None})\par
434 \par
435         mean_magnitude = np.mean(cv2.cartToPolar(flow[..., 0], flow[..., 1])[0])\par
436 \par
437         zoom_dom_direction, zoom_perc_dom, zoom_dom_thresh, zoom_mean_mag_thresh  =  self.optical_flow_zoom(flow)\par
438         pan_dom_direction, pan_perc_dom, pan_dom_thresh, pan_mean_mag_thresh =  self.optical_flow_pan(flow)\par
439         {\cf20 # flow = cv2.calcOpticalFlowFarneback(previous_frame, frame, None, 0.5, 3, 15, 3, 5, 1.2, 0)}\par
440         \par
441         mean = np.mean(flow)\par
442         median = np.median(flow)\par
443         std = np.std(flow)\par
444         self.previous_frame = frame\par
445 \par
446         opticalflow_dict = \{{\cf22 "Mean"}:mean, {\cf22 "Median"}: median, {\cf22 "STD"}:std, {\cf22 "Mean_Magnitude"}:mean_magnitude, {\cf22 "Dominant_Zoom"}:zoom_dom_direction, {\cf22 "Percent_Zoom"}:zoom_perc_dom, {\cf22 "Zoom_Dominance_Thresh"}:zoom_dom_thresh, {\cf22 "Zoom_Magnitude_Thresh"}: zoom_mean_mag_thresh,{\cf22 "Dominant_Pan"}: pan_dom_direction, {\cf22 "Percent_Pan"}: pan_perc_dom, {\cf22 "Pan_Dominance_Thresh"}: pan_dom_thresh, {\cf22 "Pan_Magnitude_Thresh"}:pan_mean_mag_thresh\}\par
447         print(opticalflow_dict)\par
448         {\cf19 return} opticalflow_dict\par
449 \par
}
{
\ql
References {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACW" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.optical_flow_pan()}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACX" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.optical_flow_zoom()}}}
, and DataLogger.previous_frame.}\par
{
\ql
Referenced by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACT" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.get_video_characteristics()}}}
.}\par
}
{\xe \v optical_flow_pan\:DataLogger}
{\xe \v DataLogger\:optical_flow_pan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
optical_flow_pan (  {\i self},   {\i flow},   {\i dominance_threshold} = {\f2 0.4},   {\i magnitude_threshold} = {\f2 0.5})}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Vector orientation:\par
t+1=current frame, t=previous frame\par
\par
atan( \par
    (yi^(t+1) - yi^(t)) / \par
    (xi^(t+1) - xi^(t)) \par
)\par
\par
\par
Calculate Dominant Orientation = Peak value in orientation histogram of the imag\par
np.histogram(np.array(vector orientation))\par
\par
returns the dominant orientation given a threshold, the threshold it passed by, and the average magnitude of movement.\par
\par
\par
Makkapati, V. (2008). Robust camera pan and zoom change detection using optical flow. \par
In National conference on computer vision, pattern recognition, \par
image processing and graphics (pp. 73-78).\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 450     {\cf17 def }optical_flow_pan(self, flow, dominance_threshold=0.4, magnitude_threshold=0.5):\par
451         {\cf22 """}\par
452 {\cf22         Vector orientation:}\par
453 {\cf22         t+1=current frame, t=previous frame}\par
454 {\cf22 }\par
455 {\cf22         atan( }\par
456 {\cf22             (yi^(t+1) - yi^(t)) / }\par
457 {\cf22             (xi^(t+1) - xi^(t)) }\par
458 {\cf22         )}\par
459 {\cf22 }\par
460 {\cf22 }\par
461 {\cf22         Calculate Dominant Orientation = Peak value in orientation histogram of the imag}\par
462 {\cf22         np.histogram(np.array(vector orientation))}\par
463 {\cf22 }\par
464 {\cf22         returns the dominant orientation given a threshold, the threshold it passed by, and the average magnitude of movement.}\par
465 {\cf22 }\par
466 {\cf22 }\par
467 {\cf22         Makkapati, V. (2008). Robust camera pan and zoom change detection using optical flow. }\par
468 {\cf22         In National conference on computer vision, pattern recognition, }\par
469 {\cf22         image processing and graphics (pp. 73-78).}\par
470 {\cf22         """}\par
471         {\cf20 # get all vector orientations}\par
472         orientation = np.rad2deg(cv2.cartToPolar(flow[..., 0], flow[..., 1])[1])\par
473         magnitude = cv2.cartToPolar(flow[..., 0], flow[..., 1])[0]\par
474         orientation_hist = np.histogram(orientation, bins=8, range=(0,360)) {\cf20 # Bin every 45 degrees}\par
475 \par
476         {\cf20 # print(orientation_hist)}\par
477         max_value_index = np.argmax(orientation_hist[0], axis=0)\par
478         percent = orientation_hist[0][max_value_index]/np.sum(orientation_hist[0])\par
479         dominant_orientation = orientation_hist[1][max_value_index]\par
480         \par
481         \par
482         {\cf19 if} percent >= dominance_threshold {\cf19 and} np.mean(magnitude) >= magnitude_threshold:\par
483             print({\cf22 "PANNING:"}, dominant_orientation, percent, np.mean(magnitude))\par
484             {\cf19 return} dominant_orientation, percent, dominance_threshold, magnitude_threshold\par
485 \par
486         {\cf19 return} {\cf18 None}, {\cf18 None}, {\cf18 None}, {\cf18 None}\par
487 \par
488         \par
489 \par
}
{
\ql
Referenced by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.optical_flow()}}}
.}\par
}
{\xe \v optical_flow_zoom\:DataLogger}
{\xe \v DataLogger\:optical_flow_zoom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
optical_flow_zoom (  {\i self},   {\i flow},   {\i dominance_threshold} = {\f2 0.7},   {\i magnitude_threshold} = {\f2 1})}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Describe each vector's direction. \par
\par
Returns \par
    0 if diverging (zoom in), 1 if converging (zoom out), otherwise none.\par
    percent of dominance\par
    domenance threshold\par
    mean magnitude threshold\par
\par
\par
Makkapati, V. (2008). Robust camera pan and zoom change detection using optical flow. \par
In National conference on computer vision, pattern recognition, \par
image processing and graphics (pp. 73-78).\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 490     {\cf17 def }optical_flow_zoom(self, flow, dominance_threshold=0.7, magnitude_threshold=1):\par
491         {\cf22 """}\par
492 {\cf22         Describe each vector's direction. }\par
493 {\cf22         }\par
494 {\cf22         Returns }\par
495 {\cf22             0 if diverging (zoom in), 1 if converging (zoom out), otherwise none.}\par
496 {\cf22             percent of dominance}\par
497 {\cf22             domenance threshold}\par
498 {\cf22             mean magnitude threshold}\par
499 {\cf22 }\par
500 {\cf22 }\par
501 {\cf22         Makkapati, V. (2008). Robust camera pan and zoom change detection using optical flow. }\par
502 {\cf22         In National conference on computer vision, pattern recognition, }\par
503 {\cf22         image processing and graphics (pp. 73-78).}\par
504 {\cf22         """}\par
505 \par
506         orientation = np.rad2deg(cv2.cartToPolar(flow[..., 0], flow[..., 1])[1])\par
507         magnitude = cv2.cartToPolar(flow[..., 0], flow[..., 1])[0]\par
508 \par
509         height, width, dim = flow.shape\par
510         center = (width/2, height/2) {\cf20 # (x,y)}\par
511 \par
512         {\cf20 # converging = np.full((height, width), False)}\par
513         \par
514         original_location = np.moveaxis(np.mgrid[:height,:width], 0, -1)\par
515 \par
516         original_diff_x = (original_location[...,0]**2 - center[0]**2)\par
517         original_diff_y = (original_location[...,1]**2 - center[1]**2)\par
518 \par
519         {\cf20 # flow_location_x = original_location[..., 0] + flow[..., 0]}\par
520         {\cf20 # flow_location_y = original_location[..., 1] + flow[..., 1]}\par
521         flow_diff_x = ((original_location[...,0] + flow[..., 0])**2 - center[0]**2)\par
522         flow_diff_y = ((original_location[...,1] + flow[..., 1])**2 - center[1]**2)\par
523 \par
524         {\cf20 # print(flow_diff_x)}\par
525         {\cf20 # print(flow_diff_y)}\par
526         flow_diff = abs((flow_diff_x + flow_diff_y)**1/2)\par
527         original_diff = abs((original_diff_x + original_diff_y)**1/2)\par
528 \par
529         converging = flow_diff <= original_diff\par
530 \par
531         {\cf20 # print(converging)}\par
532         convergence_hist = np.histogram(converging, bins=2, range=(0,1))\par
533         {\cf20 # print(convergence_hist)}\par
534         max_value_index = np.argmax(convergence_hist[0], axis=0) {\cf20 # Get the most dominant}\par
535         percent = convergence_hist[0][max_value_index]/np.sum(convergence_hist[0]) {\cf20 # get dominance percentage}\par
536         dominant_convergence = convergence_hist[1][max_value_index] {\cf20 # get the dominant convergence (True is converging)}\par
537 \par
538         {\cf19 if} percent >= dominance_threshold {\cf19 and} np.mean(magnitude) >= magnitude_threshold:\par
539             {\cf19 if} dominant_convergence >= 0:\par
540                 print({\cf22 "ZOOM IN:"}, dominant_convergence, percent, np.mean(magnitude))\par
541             {\cf19 else}:\par
542                 print({\cf22 "ZOOM OUT:"}, dominant_convergence, percent, np.mean(magnitude))\par
543             \par
544             {\cf19 return} dominant_convergence, percent, dominance_threshold, magnitude_threshold\par
545 \par
546         {\cf19 return} {\cf18 None}, {\cf18 None}, {\cf18 None}, {\cf18 None}\par
547 \par
548 \par
549         {\cf20 # print(flow.shape)}\par
550         {\cf20 # print(np.ndindex(flow.shape))}\par
551         {\cf20 # for iy, ix,  in np.ndindex(flow.shape):}\par
552         {\cf20 #     print(iy, ix)}\par
553 \par
}
{
\ql
Referenced by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACV" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.optical_flow()}}}
.}\par
}
{\xe \v paused\:DataLogger}
{\xe \v DataLogger\:paused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
paused (  {\i self},   {\i frame_number},   {\i pause_type},   {\i timer_id},   {\i tracker_id})}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Records what initiated the pause, and for how long the pause existed for.\par
\par
This requires an external timer, and will be recorded when *Play* has been selected.\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 210     {\cf17 def }paused(self, frame_number, pause_type, timer_id, tracker_id):\par
211         {\cf22 """}\par
212 {\cf22         Records what initiated the pause, and for how long the pause existed for.}\par
213 {\cf22 }\par
214 {\cf22         This requires an external timer, and will be recorded when *Play* has been selected.}\par
215 {\cf22         """}\par
216         time_started = self.start_timer(timer_id)\par
217         \par
218         data = [\par
219             frame_number,\par
220             time_started,\par
221             {\cf18 None},\par
222             {\cf22 "Pause"},\par
223             {\cf18 None},\par
224             self.intervention_level,\par
225             pause_type,\par
226             tracker_id\par
227         ]\par
228         self.paused_data[timer_id] = data\par
229         {\cf20 # print(self.logger_df)}\par
230         \par
231     \par
}
{
\ql
References {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.intervention_level}}}
, DataLogger.paused_data, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.start_timer()}}}
.}\par
}
{\xe \v plot_chars_df\:DataLogger}
{\xe \v DataLogger\:plot_chars_df}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
plot_chars_df (  {\i self})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 635     {\cf17 def }plot_chars_df(self):\par
636         {\cf19 pass}\par
637 \par
}
}
{\xe \v record_errors\:DataLogger}
{\xe \v DataLogger\:record_errors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
record_errors (  {\i self},   {\i frame})}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Not implemented\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 287     {\cf17 def }record_errors(self, frame):\par
288         {\cf22 '''}\par
289 {\cf22         Not implemented}\par
290 {\cf22         '''}\par
291         {\cf19 pass}\par
292 \par
}
}
{\xe \v slider_moved\:DataLogger}
{\xe \v DataLogger\:slider_moved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
slider_moved (  {\i self},   {\i frame_from},   {\i timer_id},   {\i tracker_id})}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Records when the slider was changed, where from, and where to.\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 249     {\cf17 def }slider_moved(self, frame_from, timer_id, tracker_id):\par
250         {\cf22 """}\par
251 {\cf22         Records when the slider was changed, where from, and where to.}\par
252 {\cf22         """}\par
253         {\cf19 if} timer_id {\cf19 not} {\cf19 in} self.timer_dict.keys():\par
254             {\cf20 # print("Recording Slider")}\par
255             time_started = self.start_timer(timer_id)\par
256             data = [\par
257             frame_from,\par
258             time_started,\par
259             0,\par
260             {\cf22 "Slider"},\par
261             {\cf18 None},\par
262             self.intervention_level,\par
263             {\cf22 "USER"},\par
264             tracker_id\par
265             ]\par
266             self.slider_data[timer_id] = data\par
267             {\cf20 # print(self.logger_df)}\par
268     \par
}
{
\ql
References {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACF" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.intervention_level}}}
, DataLogger.slider_data, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.start_timer()}}}
, and DataLogger.timer_dict.}\par
}
{\xe \v start_recording\:DataLogger}
{\xe \v DataLogger\:start_recording}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
start_recording (  {\i self})}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
User input logging starts here #. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Starts the recording timer\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 125     {\cf17 def }start_recording(self):\par
126        \par
127         {\cf22 '''}\par
128 {\cf22         Starts the recording timer}\par
129 {\cf22         '''}\par
130         start_time = time.time()\par
131         self.timer_dict[self.start_time_id] = (start_time, {\cf18 None})\par
132     \par
}
{
\ql
References DataLogger.start_time_id, and DataLogger.timer_dict.}\par
{
\ql
Referenced by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACI" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.start_timer()}}}
.}\par
}
{\xe \v start_timer\:DataLogger}
{\xe \v DataLogger\:start_timer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
start_timer (  {\i self},   {\i timer_id})}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Starts the timer from when the project is initiated\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 141     {\cf17 def }start_timer(self, timer_id):\par
142         {\cf22 """}\par
143 {\cf22         Starts the timer from when the project is initiated}\par
144 {\cf22         """}\par
145 \par
146         {\cf20 # We start recording when the first action is done}\par
147         {\cf19 if} self.start_time_id {\cf19 not} {\cf19 in} self.timer_dict:\par
148             self.start_recording()\par
149 \par
150         start_record = self.timer_dict[self.start_time_id][0]\par
151         start_time = time.time() - start_record\par
152         self.timer_dict[timer_id] = (start_time, {\cf18 None})\par
153         {\cf19 return} start_time\par
154 \par
}
{
\ql
References {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACG" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.start_recording()}}}
, DataLogger.start_time_id, and DataLogger.timer_dict.}\par
{
\ql
Referenced by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACL" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.adjustment()}}}
, {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACN" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.paused()}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAACP" }{}}{\fldrslt {\cs37\ul\cf2 DataLogger.slider_moved()}}}
.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
K:/Github/PeopleTracker/src/datalogger.py\par
}}