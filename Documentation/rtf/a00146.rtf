{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CentroidTracker\par \pard\plain 
{\tc\tcl2 \v CentroidTracker}
{\xe \v CentroidTracker}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABU" }{}}{\fldrslt {\cs37\ul\cf2 __init__}}}
 (self, maxDisappeared=50)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABV" }{}}{\fldrslt {\cs37\ul\cf2 register}}}
 (self, centroid, corners, filter=None)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABW" }{}}{\fldrslt {\cs37\ul\cf2 deregister}}}
 (self, objectID)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAABX" }{}}{\fldrslt {\cs37\ul\cf2 update}}}
 (self, rects, are_centroids=False)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b nextObjectID}{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b objects}{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b disappeared}{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b filters}{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b maxDisappeared}{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v __init__\:CentroidTracker}
{\xe \v CentroidTracker\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
__init__ (  {\i self},   {\i maxDisappeared} = {\f2 50})}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9     {\cf17 def }__init__(self, maxDisappeared=50):\par
10         {\cf20 # initialize the next unique object ID along with two ordered}\par
11         {\cf20 # dictionaries used to keep track of mapping a given object}\par
12         {\cf20 # ID to its centroid and number of consecutive frames it has}\par
13         {\cf20 # been marked as "disappeared", respectively}\par
14         self.nextObjectID = 0\par
15         self.objects = OrderedDict()\par
16         self.disappeared = OrderedDict()\par
17         self.filters = OrderedDict()\par
18 \par
19         {\cf20 # store the number of maximum consecutive frames a given}\par
20         {\cf20 # object is allowed to be marked as "disappeared" until we}\par
21         {\cf20 # need to deregister the object from tracking}\par
22         self.maxDisappeared = maxDisappeared\par
23 \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v deregister\:CentroidTracker}
{\xe \v CentroidTracker\:deregister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
deregister (  {\i self},   {\i objectID})}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34     {\cf17 def }deregister(self, objectID):\par
35         {\cf20 # to deregister an object ID we delete the object ID from}\par
36         {\cf20 # both of our respective dictionaries}\par
37         print({\cf22 "Deleting:"}, objectID)\par
38         del self.objects[objectID]\par
39         del self.disappeared[objectID]\par
40 \par
}
}
{\xe \v register\:CentroidTracker}
{\xe \v CentroidTracker\:register}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
register (  {\i self},   {\i centroid},   {\i corners},   {\i filter} = {\f2 None})}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24     {\cf17 def }register(self, centroid, corners,  filter=None):\par
25         {\cf20 # when registering an object we use the next available object}\par
26         {\cf20 # ID to store the centroid}\par
27         self.objects[self.nextObjectID] = (centroid, corners)\par
28         self.disappeared[self.nextObjectID] = 0\par
29         {\cf19 if} filter {\cf19 is} {\cf19 not} {\cf18 None}:\par
30             self.filters[self.nextObjectID] = filter\par
31         self.nextObjectID += 1\par
32     \par
33 \par
}
}
{\xe \v update\:CentroidTracker}
{\xe \v CentroidTracker\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
update (  {\i self},   {\i rects},   {\i are_centroids} = {\f2 False})}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41     {\cf17 def }update(self, rects, are_centroids=False):\par
42         {\cf20 # check to see if the list of input bounding box rectangles}\par
43         {\cf20 # is empty}\par
44         box_corners = []\par
45         {\cf19 if} len(rects) == 0:\par
46             {\cf20 # loop over any existing tracked objects and mark them}\par
47             {\cf20 # as disappeared}\par
48             {\cf19 for} objectID {\cf19 in} self.disappeared.keys():\par
49                 self.disappeared[objectID] += 1\par
50 \par
51                 {\cf20 # if we have reached a maximum number of consecutive}\par
52                 {\cf20 # frames where a given object has been marked as}\par
53                 {\cf20 # missing, deregister it}\par
54                 {\cf19 if} self.disappeared[objectID] > self.maxDisappeared:\par
55                     self.deregister(objectID)\par
56 \par
57             {\cf20 # return early as there are no centroids or tracking info}\par
58             {\cf20 # to update}\par
59             {\cf19 return} self.objects\par
60 \par
61         {\cf19 if} are_centroids {\cf19 is} {\cf17 False}:\par
62             {\cf20 # initialize an array of input centroids for the current frame}\par
63             inputCentroids = np.zeros((len(rects), 2), dtype={\cf22 "int"})\par
64             box_corners = np.zeros((len(rects), 4), dtype={\cf22 "int"})\par
65 \par
66             {\cf20 # loop over the bounding box rectangles}\par
67             {\cf19 for} (i, (startX, startY, endX, endY)) {\cf19 in} enumerate(rects):\par
68                 {\cf20 # use the bounding box coordinates to derive the centroid}\par
69                 cX = int((startX + endX) / 2.0)\par
70                 cY = int((startY + endY) / 2.0)\par
71                 {\cf20 # box_corners.append((startX, startY, endX, endY))}\par
72                 box_corners[i] = (startX, startY, endX, endY)\par
73                 inputCentroids[i] = (cX, cY)\par
74 \par
75         {\cf19 else}:\par
76             {\cf20 # initialize an array of input centroids for the current frame}\par
77             inputCentroids = np.zeros((len(rects), 2), dtype={\cf22 "int"})\par
78             {\cf19 for} i, rect {\cf19 in} enumerate(rects):\par
79                 inputCentroids[i] = rect\par
80                 box_corners[i] = (startX, startY, endX, endY)\par
81 \par
82         {\cf20 # if we are currently not tracking any objects take the input}\par
83         {\cf20 # centroids and register each of them}\par
84         {\cf19 if} len(self.objects) == 0:\par
85             {\cf19 for} i {\cf19 in} range(0, len(inputCentroids)):\par
86                 self.register(inputCentroids[i], box_corners[i])\par
87 \par
88         {\cf20 # otherwise, are are currently tracking objects so we need to}\par
89         {\cf20 # try to match the input centroids to existing object}\par
90         {\cf20 # centroids}\par
91         {\cf19 else}:\par
92             {\cf20 # grab the set of object IDs and corresponding centroids}\par
93             objectIDs = list(self.objects.keys())\par
94             values = list(self.objects.values())\par
95             centroid_array = np.zeros((len(objectIDs), 2), dtype={\cf22 "int"})\par
96 \par
97             {\cf19 for} i, val {\cf19 in} enumerate(values):\par
98                 centroid = val[0]\par
99                 centroid_array[i][0] = centroid[0]\par
100                 centroid_array[i][1] = centroid[1]\par
101             objectCentroids = centroid_array\par
102             {\cf20 # objectCentroids = }\par
103             print(objectCentroids.shape)\par
104             {\cf20 # objectCentroids = np.array([objectCentroids])}\par
105             objectFilters = list(self.filters.values())\par
106 \par
107             {\cf20 # compute the distance between each pair of object}\par
108             {\cf20 # centroids and input centroids, respectively -- our}\par
109             {\cf20 # goal will be to match an input centroid to an existing}\par
110             {\cf20 # object centroid}\par
111             D = dist.cdist(objectCentroids, inputCentroids)\par
112             print(D)\par
113 \par
114             {\cf20 # in order to perform this matching we must (1) find the}\par
115             {\cf20 # smallest value in each row and then (2) sort the row}\par
116             {\cf20 # indexes based on their minimum values so that the row}\par
117             {\cf20 # with the smallest value as at the *front* of the index}\par
118             {\cf20 # list}\par
119             rows = D.min(axis=1).argsort()\par
120 \par
121             {\cf20 # next, we perform a similar process on the columns by}\par
122             {\cf20 # finding the smallest value in each column and then}\par
123             {\cf20 # sorting using the previously computed row index list}\par
124             cols = D.argmin(axis=1)[rows]\par
125 \par
126             {\cf20 # in order to determine if we need to update, register,}\par
127             {\cf20 # or deregister an object we need to keep track of which}\par
128             {\cf20 # of the rows and column indexes we have already examined}\par
129             usedRows = set()\par
130             usedCols = set()\par
131 \par
132             {\cf20 # loop over the combination of the (row, column) index}\par
133             {\cf20 # tuples}\par
134             {\cf19 for} (row, col) {\cf19 in} zip(rows, cols):\par
135                 {\cf20 # if we have already examined either the row or}\par
136                 {\cf20 # column value before, ignore it}\par
137                 {\cf20 # val}\par
138                 {\cf19 if} row {\cf19 in} usedRows {\cf19 or} col {\cf19 in} usedCols:\par
139                     {\cf19 continue}\par
140 \par
141                 {\cf20 # otherwise, grab the object ID for the current row,}\par
142                 {\cf20 # set its new centroid, and reset the disappeared}\par
143                 {\cf20 # counter}\par
144                 objectID = objectIDs[row]\par
145                 self.objects[objectID] = (inputCentroids[col], box_corners[col])\par
146                 {\cf20 # print(self.objects[objectID])}\par
147                 self.disappeared[objectID] = 0\par
148 \par
149                 {\cf20 # indicate that we have examined each of the row and}\par
150                 {\cf20 # column indexes, respectively}\par
151                 usedRows.add(row)\par
152                 usedCols.add(col)\par
153 \par
154             {\cf20 # compute both the row and column index we have NOT yet}\par
155             {\cf20 # examined}\par
156             unusedRows = set(range(0, D.shape[0])).difference(usedRows)\par
157             unusedCols = set(range(0, D.shape[1])).difference(usedCols)\par
158 \par
159             {\cf20 # in the event that the number of object centroids is}\par
160             {\cf20 # equal or greater than the number of input centroids}\par
161             {\cf20 # we need to check and see if some of these objects have}\par
162             {\cf20 # potentially disappeared}\par
163             {\cf19 if} D.shape[0] >= D.shape[1]:\par
164                 {\cf20 # loop over the unused row indexes}\par
165                 {\cf19 for} row {\cf19 in} unusedRows:\par
166                     {\cf20 # grab the object ID for the corresponding row}\par
167                     {\cf20 # index and increment the disappeared counter}\par
168                     objectID = objectIDs[row]\par
169                     self.disappeared[objectID] += 1\par
170 \par
171                     {\cf20 # check to see if the number of consecutive}\par
172                     {\cf20 # frames the object has been marked "disappeared"}\par
173                     {\cf20 # for warrants deregistering the object}\par
174                     {\cf19 if} self.disappeared[objectID] > self.maxDisappeared:\par
175                         self.deregister(objectID)\par
176 \par
177             {\cf20 # otherwise, if the number of input centroids is greater}\par
178             {\cf20 # than the number of existing object centroids we need to}\par
179             {\cf20 # register each new input centroid as a trackable object}\par
180             {\cf19 else}:\par
181                 {\cf19 for} col {\cf19 in} unusedCols:\par
182                     self.register(inputCentroids[col], box_corners[col])\par
183 \par
184         {\cf20 # return the set of trackable objects}\par
185         {\cf19 return} self.objects\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
K:/Github/PeopleTracker/src/centroidtracker.py\par
}}