{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PeopleTracker.src.maskrcnn Namespace Reference\par \pard\plain 
{\tc\tcl2 \v PeopleTracker.src.maskrcnn}
{\xe \v PeopleTracker.src.maskrcnn}
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 load_predicted}}}
 (pred_file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHC" }{}}{\fldrslt {\cs37\ul\cf2 display_preds}}}
 (frame, frame_num, pred_dict, ratios)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 predict}}}
 (filename, model="mask_rcnn_coco_person.h5", class_names=["BG", "person"], step=10, display=False, progress=None, logger=None)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHE" }{}}{\fldrslt {\cs37\ul\cf2 compute_iou}}}
 (box, boxes, boxes_area, ratios=(1, 1), frame=None)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHF" }{}}{\fldrslt {\cs37\ul\cf2 track_predictions}}}
 (pred_dict, video, method=0, id_prefix="P", KalmanFilter={\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGK" }{}}{\fldrslt {\cs37\ul\cf2 KalmanPred}}}
(), ratios=(1, 1), buffer=10, preview=True)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b NEAREST_CENTROID} = 0{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b NEAREST_CORNERS} = 1{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b NEAREST_BOX} = 2{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b NEAREST_KALMAN_CENTROID} = 3{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b NEAREST_KALMAN_CORNERS} = 4{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

int {\b NEAREST_KALMAN} = 5{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b display}{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b True}{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b step}{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

{\b pred_dict} = {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 load_predicted}}}
("K:/Github/PeopleTracker/videos/(Simple) GP014125_predict.csv"){\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Model from: https://github.com/Superlee506/Mask_RCNN_Humanpose\par
\par
Cuda Version 10.1\par
CUDNN Version\par
                         # tensorflow==2.4.0 (Could be wrong??? just use GPU)d\par
Tensorflow version 2.3.0 # tensorflow-gpu==2.3.0\par
}
 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v compute_iou\:PeopleTracker.src.maskrcnn}
{\xe \v PeopleTracker.src.maskrcnn\:compute_iou}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
compute_iou (  {\i box},   {\i boxes},   {\i boxes_area},   {\i ratios} = {\f2 (1,1)},   {\i frame} = {\f2 None})}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Calculates IoU of the given box with the array of the given boxes.\par
box: 1D vector [x1, y1, x2, y2]\par
boxes: [boxes_count, (x1, y1, x2, y2)]\par
box_area: float. the area of 'box'\par
boxes_area: array of length boxes_count.\par
ratio: ratio (width, height) to scale boxes from video resolution to analysis resolution\par
\par
Note: the areas are passed in rather than calculated here for\par
efficiency. Calculate once in the caller to avoid duplicate work.\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 219 {\cf17 def }compute_iou(box, boxes, boxes_area, ratios=(1,1), frame={\cf18 None}):\par
220     {\cf22 """Calculates IoU of the given box with the array of the given boxes.}\par
221 {\cf22     box: 1D vector [x1, y1, x2, y2]}\par
222 {\cf22     boxes: [boxes_count, (x1, y1, x2, y2)]}\par
223 {\cf22     box_area: float. the area of 'box'}\par
224 {\cf22     boxes_area: array of length boxes_count.}\par
225 {\cf22     ratio: ratio (width, height) to scale boxes from video resolution to analysis resolution}\par
226 {\cf22 }\par
227 {\cf22     Note: the areas are passed in rather than calculated here for}\par
228 {\cf22     efficiency. Calculate once in the caller to avoid duplicate work.}\par
229 {\cf22     """}\par
230 \par
231     area = (box[0] - box[2]) * (box[1] - box[3]) {\cf20 # SOMETHING IS WRONG WITH BOX. GOOD NIGHT!}\par
232 \par
233     ious = []\par
234     {\cf19 for} index, preds {\cf19 in} enumerate(boxes):\par
235         \par
236 \par
237         x1 = int(preds[0]*ratios[0])\par
238         y1 = int(preds[1]*ratios[1])\par
239         x2 = int(preds[2]*ratios[0])\par
240         y2 = int(preds[3]*ratios[1])\par
241 \par
242         {\cf19 if} frame {\cf19 is} {\cf19 not} {\cf18 None}:\par
243             cv2.rectangle(frame, (x1,y1), (x2,y2), (150,150,0), 1)\par
244 \par
245         xA = max(box[0], x1)\par
246         yA = max(box[1], y1)\par
247         xB = min(box[2], x2)\par
248         yB = min(box[3], y2)\par
249 \par
250         interArea = max(0, xB - xA + 1) * max(0, yB - yA + 1)\par
251         \par
252         boxBArea = (x2 - x1 + 1) * (y2 - y1 + 1)\par
253         {\cf20 # print(box_area, boxBArea)}\par
254         iou = interArea / float(area + boxBArea - interArea)\par
255         ious.append(iou)\par
256 \par
257     {\cf19 return} ious, frame\par
258 \par
}
{
\ql
References {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHB" }{}}{\fldrslt {\cs37\ul\cf2 PeopleTracker.src.maskrcnn.load_predicted()}}}
, and {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHD" }{}}{\fldrslt {\cs37\ul\cf2 PeopleTracker.src.maskrcnn.predict()}}}
.}\par
}
{\xe \v display_preds\:PeopleTracker.src.maskrcnn}
{\xe \v PeopleTracker.src.maskrcnn\:display_preds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
display_preds (  {\i frame},   {\i frame_num},   {\i pred_dict},   {\i ratios})}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Displays the prediction\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74 {\cf17 def }display_preds(frame, frame_num, pred_dict, ratios):\par
75     {\cf22 """}\par
76 {\cf22     Displays the prediction}\par
77 {\cf22     """}\par
78 \par
79     {\cf19 if} frame_num {\cf19 in} pred_dict.keys():\par
80     \par
81         boxes = pred_dict[frame_num][0]\par
82         {\cf20 # print("RATIOS", ratios)}\par
83         {\cf19 for} box {\cf19 in} boxes:\par
84             {\cf19 if} box:\par
85                 x1 = box[0]\par
86                 y1 = box[1]\par
87                 x2 = box[2]\par
88                 y2 = box[3]\par
89 \par
90                 p1 = (int(x1*ratios[0]), int(y1*ratios[1]))\par
91                 p2 = (int(x2*ratios[0]), int(y2*ratios[1]))\par
92 \par
93                 {\cf20 # print(p1,p2)}\par
94                 frame = cv2.rectangle(frame, p1, p2, (0, 255, 0), 1)\par
95                 frame = cv2.putText(frame,(str(int(x1*ratios[0]))) + {\cf22 ","} + str(int(y1*ratios[1])) , p1, 5, 0.5, (0,0,0))\par
96 \par
97     {\cf19 return} frame\par
98 \par
}
}
{\xe \v load_predicted\:PeopleTracker.src.maskrcnn}
{\xe \v PeopleTracker.src.maskrcnn\:load_predicted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
load_predicted (  {\i pred_file})}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Loads predicted data into a variable for later use.\par
Pred_dict[frame_number] = Lost of boxes\par
\par
A box is described by:\par
x = box[0],\par
y = box[1],\par
width = box[2],\par
height = box[3]\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25 {\cf17 def }load_predicted(pred_file):\par
26     {\cf22 """}\par
27 {\cf22     Loads predicted data into a variable for later use.}\par
28 {\cf22     Pred_dict[frame_number] = Lost of boxes}\par
29 {\cf22 }\par
30 {\cf22     A box is described by:}\par
31 {\cf22     x = box[0],}\par
32 {\cf22     y = box[1],}\par
33 {\cf22     width = box[2],}\par
34 {\cf22     height = box[3]}\par
35 {\cf22     """}\par
36     preds = pd.read_csv(pred_file)\par
37     {\cf20 # print(preds)}\par
38 \par
39     frames = preds.iloc[:,0].tolist()\par
40     rois = preds.iloc[:,1].tolist()\par
41 \par
42     pred_dict = \{\}\par
43     \par
44     {\cf19 for} i, roi {\cf19 in} enumerate(rois):\par
45         roi_list = roi.split({\cf22 "\\n"})\par
46         box_list = []\par
47         box_areas = []\par
48 \par
49         {\cf20 #Parse the string saved in csv into a list}\par
50         {\cf19 for} box {\cf19 in} roi_list:\par
51             box = box.replace({\cf22 "["}, {\cf22 ""})\par
52             box = box.replace({\cf22 "]"}, {\cf22 ""})\par
53             box = box.split()\par
54             box = tuple(map(int, box))\par
55 \par
56             area = 0\par
57             {\cf19 if} box:\par
58             \par
59                 y1 = box[0]\par
60                 x1 = box[1]\par
61                 y2 = box[2]\par
62                 x2 = box[3]\par
63 \par
64                 box = (x1,y1,x2,y2)\par
65                 area = (box[0] - box[2]) * (box[1] - box[3])\par
66 \par
67             box_areas.append(area)\par
68             box_list.append(box)\par
69 \par
70         pred_dict[frames[i]] = (box_list, box_areas)\par
71 \par
72     {\cf19 return} pred_dict\par
73 \par
}
{
\ql
Referenced by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHE" }{}}{\fldrslt {\cs37\ul\cf2 PeopleTracker.src.maskrcnn.compute_iou()}}}
.}\par
}
{\xe \v predict\:PeopleTracker.src.maskrcnn}
{\xe \v PeopleTracker.src.maskrcnn\:predict}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
predict (  {\i filename},   {\i model} = {\f2 "mask_rcnn_coco_person.h5"},   {\i class_names} = {\f2 ["BG",\~ "person"]},   {\i step} = {\f2 10},   {\i display} = {\f2 False},   {\i progress} = {\f2 None},   {\i logger} = {\f2 None})}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Uses MaskRCNN COCO models and uses them to predict items on the image.\par
Steps indicate how frequently the model should predict on the video (default every 10 frames)\par
Display shows predictions visually\par
Progress is a QProgressDialog for the application\par
Logger is a logger which both displays info and records it for crashlogger\par
\par
Exports results into filename_predict.csv\par
}
 \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 99 {\cf17 def }predict(filename, model="mask_rcnn_coco_person.h5", class_names=["BG", "person"], step=10, display=False, progress=None, logger=None):\par
100     {\cf22 '''}\par
101 {\cf22     Uses MaskRCNN COCO models and uses them to predict items on the image.}\par
102 {\cf22     Steps indicate how frequently the model should predict on the video (default every 10 frames)}\par
103 {\cf22     Display shows predictions visually}\par
104 {\cf22     Progress is a QProgressDialog for the application}\par
105 {\cf22     Logger is a logger which both displays info and records it for crashlogger}\par
106 {\cf22 }\par
107 {\cf22     Exports results into filename_predict.csv}\par
108 {\cf22     '''}\par
109     {\cf17 from} pixellib.instance {\cf17 import} custom_segmentation\par
110     {\cf17 import} tensorflow {\cf17 as} tf\par
111     print({\cf22 "Using Tensorflow: "}, tf. __version__) \par
112 \par
113     gpus = tf.config.experimental.list_physical_devices({\cf22 'GPU'})\par
114     {\cf19 if} gpus:\par
115         {\cf19 try}:\par
116             {\cf19 for} gpu {\cf19 in} gpus:\par
117                 tf.config.experimental.set_memory_growth(gpu, {\cf17 True})\par
118         {\cf19 except} RuntimeError {\cf17 as} e:\par
119             print(e)\par
120 \par
121     class_name = model.split({\cf22 '_'})[-1] {\cf20 #CLASSNAME.h5}\par
122     class_name = class_name.split({\cf22 '.'})[0] {\cf20 #CLASSNAME}\par
123     class_names = [{\cf22 "BG"}, class_name]\par
124     print(class_name)\par
125     {\cf20 #loads models}\par
126     custom_model = custom_segmentation()\par
127     custom_model.inferConfig(num_classes= 1, class_names=class_names)\par
128     custom_model.load_model(model)\par
129 \par
130     {\cf20 #loads videos}\par
131     cap = cv2.VideoCapture(filename)\par
132     vid_length = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))\par
133 \par
134     {\cf20 #init lists for temp storage}\par
135     roi_list = []\par
136     frame_list = []\par
137     score_list = []\par
138     \par
139     time_queue = []\par
140     fps_list = []\par
141     print(vid_length)\par
142     {\cf20 #iterate through the video by said steps}\par
143     {\cf19 for} frame_num {\cf19 in} range(0, vid_length, step):\par
144         start = timeit.default_timer()\par
145         \par
146         {\cf20 #set frame number to i}\par
147         cap.set(cv2.CAP_PROP_POS_FRAMES, frame_num)\par
148         ret, frame = cap.read() \par
149 \par
150         {\cf19 if} ret:\par
151 \par
152             \par
153 \par
154             {\cf19 if} progress == {\cf17 True}:\par
155                 print({\cf22 "Progress:"} + str(frame_num/vid_length), end={\cf22 "\\r"})\par
156             \par
157             {\cf19 elif} progress {\cf19 is} {\cf19 not} {\cf18 None}:\par
158                 {\cf19 if} progress.wasCanceled():\par
159                     {\cf19 return} {\cf18 None}, {\cf18 None}, {\cf18 None}\par
160                 {\cf19 if} frame_num == 0:\par
161                     progress.setLabelText({\cf22 "Predict people location progress"})\par
162                     progress.setRange(0,vid_length)\par
163                 progress.setValue(frame_num)\par
164                 \par
165                 QtCore.QCoreApplication.processEvents()\par
166             {\cf20 #Segment the image}\par
167             segmask, frame = custom_model.segmentFrame(frame, {\cf17 True})\par
168             {\cf20 # train_dataset_keypoints = coco.CocoDataset(task_type="person_keypoints")}\par
169 \par
170             {\cf20 #Place data in lists for easy export}\par
171             roi_list.append(segmask[{\cf22 'rois'}])\par
172             score_list.append(segmask[{\cf22 'scores'}])\par
173             {\cf20 # print(segmask['person_keypoints'])}\par
174             frame_list.append(frame_num)\par
175 \par
176             {\cf19 if} display:\par
177                 cv2.imshow({\cf22 "Predictions"}, frame)\par
178                 key = cv2.waitKey(1) & 0xFF\par
179 \par
180             stop = timeit.default_timer()\par
181 \par
182             {\cf19 if} len(time_queue) == 60:\par
183                 time_queue.pop()\par
184             \par
185             fps = 1/(stop - start)\par
186             fps_list.append(fps)\par
187 \par
188             time_queue.append(fps)\par
189             print({\cf22 'FPS:'}, fps)\par
190             fps = sum(time_queue) / len(time_queue)\par
191 \par
192             {\cf19 if} logger {\cf19 is} {\cf19 not} {\cf18 None}:\par
193                 eta = ((vid_length-frame_num)/(step*fps))\par
194                 printstr = {\cf22 "Predicting frame "} + str(frame_num) + {\cf22 "/"} + str(vid_length) + {\cf22 " \\npeople: "}+ str(len(segmask[{\cf22 'rois'}])) + {\cf22 " \\nETA: "} + time.strftime({\cf22 '%H:%M:%S'}, time.gmtime(eta))\par
195                 logger(printstr)\par
196                 progress.setLabelText({\cf22 "Predict people location progress \\n\\n"} + printstr)\par
197                 {\cf19 if} frame_num + step == vid_length:\par
198                     logger({\cf22 "Predicting Complete."})\par
199     \par
200             {\cf19 else}:\par
201                 print({\cf22 "Predicting frame "} + str(frame_num) + {\cf22 "/"} + str(vid_length) + {\cf22 " people:"}+ str(len(segmask[{\cf22 'rois'}])))\par
202                 eta = ((vid_length-frame_num)/(step*fps)) \par
203                 print({\cf22 "ETA:"}, time.strftime({\cf22 '%H:%M:%S'}, time.gmtime(eta)))\par
204 \par
205     end_time = time.time()\par
206     {\cf20 #create dataframe}\par
207     data = \{\par
208         {\cf22 "Frame_Num"}:frame_list,\par
209         {\cf22 "Region_of_interest"}:roi_list,\par
210         {\cf22 "Scores"}:score_list,\par
211         {\cf22 "Predict_Duration"}:fps_list\par
212     \}\par
213 \par
214     {\cf20 #export dataframe}\par
215     df = pd.DataFrame(data)\par
216     export_csv = df.to_csv((filename[:-4] + {\cf22 "_predict.csv"}), index = {\cf18 None}, header={\cf17 True}) {\cf20 #Don't forget to add '.csv' at the end of the path}\par
217     {\cf19 return} frame_list, roi_list, score_list\par
218 \par
}
{
\ql
Referenced by {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAHE" }{}}{\fldrslt {\cs37\ul\cf2 PeopleTracker.src.maskrcnn.compute_iou()}}}
.}\par
}
{\xe \v track_predictions\:PeopleTracker.src.maskrcnn}
{\xe \v PeopleTracker.src.maskrcnn\:track_predictions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
track_predictions (  {\i pred_dict},   {\i video},   {\i method} = {\f2 0},   {\i id_prefix} = {\f2 "P"},   {\i KalmanFilter} = {\f2 {\field {\*\fldinst { HYPERLINK  \\l "AAAAAAAAGK" }{}}{\fldrslt {\cs37\ul\cf2 KalmanPred}}}
()},   {\i ratios} = {\f2 (1,1)},   {\i buffer} = {\f2 10},   {\i preview} = {\f2 True})}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 259 {\cf17 def }track_predictions(pred_dict, video, method = 0, id_prefix="P", KalmanFilter=KalmanPred(), ratios=(1,1), buffer=10, preview={\cf17 True}):\par
260     \par
261     {\cf20 # pred_track_dict = \{\}}\par
262 \par
263     Frames = []\par
264     Name = []\par
265     Id = []\par
266     Pixel_Loc_x = []\par
267     Pixel_Loc_y = []\par
268     BBox_TopLeft_x = []\par
269     BBox_TopLeft_y = []\par
270     BBox_BottomRight_x = []\par
271     BBox_BottomRight_y = []\par
272     FrameRate = []\par
273     Max_Pixel_X = []\par
274     Max_Pixel_Y = []\par
275     \par
276     \par
277 \par
278     ct = CentroidTracker(buffer)\par
279     {\cf20 # ct = NewCentroidTracker(buffer, KalmanFilter)}\par
280 \par
281     cap = cv2.VideoCapture(video)\par
282     cv2.startWindowThread()\par
283     export = video[:-3]\par
284     vid_length = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))\par
285 \par
286 \par
287     {\cf19 for} frame_num {\cf19 in} pred_dict.keys():\par
288         {\cf20 # print(frame_num)}\par
289         cap.set(cv2.CAP_PROP_POS_FRAMES, frame_num)\par
290         ret, frame = cap.read() \par
291         boxes = pred_dict[frame_num][0]\par
292 \par
293         {\cf20 # show the frame and don't do anything if there are no predictions}\par
294         {\cf19 if} boxes == [()]:\par
295             cv2.imshow({\cf22 "IDs"}, frame)\par
296             key = cv2.waitKey(1)\par
297             {\cf19 if} key == ord({\cf22 'q'}):\par
298                 print({\cf22 "QUITTING"})\par
299                 cv2.destroyWindow({\cf22 "IDs"})\par
300                 {\cf19 break}\par
301             {\cf19 continue}\par
302         {\cf20 # rects = []}\par
303         \par
304         {\cf20 # loop over the detections}\par
305         {\cf20 # for i in range(0, boxes.shape[2]):}\par
306             {\cf20 # filter out weak detections by ensuring the predicted}\par
307             {\cf20 # probability is greater than a minimum threshold}\par
308             {\cf20 # if boxes[0, 0, i, 2] > args["confidence"]:}\par
309             {\cf20 #     # compute the (x, y)-coordinates of the bounding box for}\par
310             {\cf20 #     # the object, then update the bounding box rectangles list}\par
311             {\cf20 #     box = boxes[0, 0, i, 3:7] * np.array([W, H, W, H])}\par
312             {\cf20 #     rects.append(box.astype("int"))}\par
313 \par
314             {\cf20 #     # draw a bounding box surrounding the object so we can}\par
315             {\cf20 #     # visualize it}\par
316             {\cf20 #     (startX, startY, endX, endY) = box.astype("int")}\par
317             {\cf20 #     cv2.rectangle(frame, (startX, startY), (endX, endY),}\par
318             {\cf20 #         (0, 255, 0), 2)}\par
319 \par
320         {\cf20 # update our centroid tracker using the computed set of bounding}\par
321         {\cf20 # box rectangles}\par
322         objects = ct.update(boxes)\par
323         {\cf20 # print(objects)}\par
324 \par
325         {\cf20 # track_object = boxe}\par
326         {\cf20 # if preview:}\par
327         {\cf20 # index = 0}\par
328         {\cf20 # print("BOXES LENGTH", boxes, len(boxes))}\par
329         {\cf20 # loop over the tracked objects}\par
330         {\cf20 # print(len(objects))}\par
331         {\cf19 for} ObjectId {\cf19 in} objects.keys():\par
332             data = objects[ObjectId]\par
333             centroid = data[0]\par
334             box = data[1]\par
335 \par
336             x1 = int(box[0]*ratios[0])\par
337             y1 = int(box[1]*ratios[1])\par
338             x2 = int(box[2]*ratios[0])\par
339             y2 = int(box[3]*ratios[1])\par
340             \par
341             {\cf20 # draw both the ID of the object and the centroid of the}\par
342             Frames.append(frame_num)\par
343             Name.append(ObjectId)\par
344             Id.append(ObjectId)\par
345             Pixel_Loc_x.append(centroid[0])\par
346             Pixel_Loc_y.append(centroid[1])\par
347             BBox_TopLeft_x.append(x1)\par
348             BBox_TopLeft_y.append(cap.get(cv2.CAP_PROP_FRAME_HEIGHT) - y1)\par
349             BBox_BottomRight_x.append(x2)\par
350             BBox_BottomRight_y.append(cap.get(cv2.CAP_PROP_FRAME_HEIGHT) - y2)\par
351             FrameRate.append(cap.get(cv2.CAP_PROP_FPS))\par
352             Max_Pixel_X.append(cap.get(cv2.CAP_PROP_FRAME_WIDTH))\par
353             Max_Pixel_Y.append(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))\par
354 \par
355             {\cf19 if} preview:\par
356                 {\cf20 # object on the output frame}\par
357                 text = {\cf22 "ID \{\}"}.format(ObjectId)\par
358                 cv2.putText(frame, text, (centroid[0] - 10, centroid[1] - 10),\par
359                     cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)\par
360                 cv2.circle(frame, (centroid[0], centroid[1]), 4, (0, 255, 0), -1)\par
361                 cv2.rectangle(frame, (x1,y1), (x2,y2), (150,150,0), 1)\par
362 \par
363         cv2.imshow({\cf22 "IDs"}, frame)\par
364         key = cv2.waitKey(1)\par
365 \par
366         {\cf19 if} key == ord({\cf22 'q'}):\par
367             print({\cf22 "QUITTING"})\par
368             cv2.destroyWindow({\cf22 "IDs"})\par
369             {\cf19 break}\par
370         \par
371         predicted_ids = \{{\cf22 "Frame_Num"}: Frames, {\cf22 "Name"}:Name, {\cf22 "ID"}:Id, {\cf22 "Pixel_Loc_x"}:Pixel_Loc_x, {\cf22 "Pixel_Loc_y"}:Pixel_Loc_y, \par
372                         {\cf22 "BBox_TopLeft_x"}:BBox_TopLeft_x, {\cf22 "BBox_TopLeft_y"}:BBox_TopLeft_y, \par
373                         {\cf22 "BBox_BottomRight_x"}:BBox_BottomRight_x,{\cf22 "BBox_BottomRight_y"}:BBox_BottomRight_y, \par
374                         {\cf22 "FrameRate"}:FrameRate, {\cf22 "Max_Pixel_x"}:Max_Pixel_X, {\cf22 "Max_Pixel_y"}:Max_Pixel_Y\par
375         \}\par
376         output_dict = pd.DataFrame(predicted_ids)\par
377 \par
378     {\cf19 return} output_dict\par
379 \par
}
}
}